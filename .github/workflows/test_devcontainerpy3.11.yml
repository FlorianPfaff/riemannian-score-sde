name: Build, Test, and Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        experiment: [s2_toy, s2_symm]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and run devcontainer
        run: |
          # Pull the specified image
          docker pull mcr.microsoft.com/devcontainers/python:0-3.11
          
          # Create and start a container from the image, overriding the default command to keep it running
          container_id=$(docker run -d mcr.microsoft.com/devcontainers/python:0-3.11 tail -f /dev/null)
          
          # Copy the repository code into the container
          docker cp . $container_id:/workspace
          
          # Run the postCreateCommand specified in devcontainer.json
          # to emulate the behavior of the devcontainer postCreateCommand section.
          # Need to isntall beartype mpmath and numpy-quaternion manually because pyrecest dependencies are not installed automatically when building from git
          docker exec -e PYRECEST_BACKEND=jax -e GEOMSTATS_BACKEND=jax $container_id bash -c "cd /workspace && pip install beartype mpmath numpy-quaternion -e ."
          
          # Run the experiment based on matrix variable
          docker exec -e HYDRA_FULL_ERROR=1 -e PYRECEST_BACKEND=jax -e GEOMSTATS_BACKEND=jax $container_id python /workspace/main.py experiment=${{ matrix.experiment }} steps=1000 hydra.job.chdir=False
          if [ "${{ matrix.experiment }}" == "s2_toy" ]; then
            MAX_LOSS=0.5
          else
            MAX_LOSS=0.8
          fi
          docker exec $container_id python /workspace/check_loss_script.py ./logs/version_0/metrics.csv $MAX_LOSS

          
